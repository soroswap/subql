services:
  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - soroswap-network

  subquery-node:
    # image: subql-stellar-node-development
    image: subquerynetwork/subql-node-stellar:v6.1.0
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-} # set SUB_COMMAND env variable to "test" to run tests
      - -f=/app
      - --db-schema=app
      - --workers=4 # The more the faster
      - --batch-size=50 # The higher the faster, set low to avoid rate limit on SDF endpoint
      - --unsafe
      #- --debug
      #- --log-level=debug
      - --page-limit=100 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10
    networks:
      - soroswap-network

  graphql-engine:
    image: subquerynetwork/subql-query:2.23.4
    ports:
      - 7000:7000
    depends_on:
      postgres:
        condition: service_healthy
      subquery-node:
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000
      - --port=7000
    networks:
      - soroswap-network

networks:
  soroswap-network:
    external: true